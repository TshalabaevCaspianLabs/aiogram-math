from aiogram import types

from keyboards.inline import orsers, admin_panel
from loader import dp
from utils.db_api import Base
from utils.misc.logging import logger


@dp.message_handler(text='–ó–∞–¥–∞–Ω–∏—è üìù')
async def orders(message: types.Message):
    admin = Base().read_admin('admins', message.chat.id)
    if admin[1] == 1:
        try:
            data = Base().read_tasks('tasks')
            file = open(data[1], 'rb')
            await message.answer_photo(photo=file, reply_markup=orsers)
        except Exception as e:
            logger.error(e)
            await message.answer(text='–ò–∑–≤–∏–Ω–∏ —è –Ω–µ –Ω–∞—à–µ–ª –∑–∞–¥–∞–Ω–∏–π –≤ –±–∞–∑–µ üòø')
    else:
        await message.answer(text='–ò–∑–≤–∏–Ω–∏ –Ω–æ —Ç—ã –Ω–µ –∞–¥–º–∏–Ω!\n'
                                  '–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Ç–µ–±—è –Ω–∞–∑–Ω–∞—á–∞—Ç –∞–¥–º–∏–Ω–æ–º')


@dp.message_handler(text='–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å ü§ñ')
async def admin_panel_(message: types.Message):
    admin = Base().read_admin('admins', message.chat.id)
    if admin[1] == 1:
        await message.answer(text=f'<pre>{message.from_user.full_name} üßî </pre>\n\n'
                                  f'<i>–≠—Ç–æ —Ç–≤–æ—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å, —Ç—É—Ç —Ç—ã –º–æ–∂–µ—à—å</i>\n\n'
                                  f'<b>- üë• –ü–æ–º–µ–Ω—è—Ç—å –∞–¥–º–∏–Ω–∞</b>\n'
                                  f'<b>- üåê –í—ã–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –ª—é–¥—å–º–∏</b>', reply_markup=admin_panel,
                             parse_mode='html')

    else:
        await message.answer(text='–ò–∑–≤–∏–Ω–∏ –Ω–æ —Ç—ã –Ω–µ –∞–¥–º–∏–Ω!\n'
                                  '–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Ç–µ–±—è –Ω–∞–∑–Ω–∞—á–∞—Ç –∞–¥–º–∏–Ω–æ–º')
